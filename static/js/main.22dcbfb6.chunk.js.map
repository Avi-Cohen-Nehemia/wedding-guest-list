{"version":3,"sources":["components/Spinner/index.js","components/AttendanceForm/index.js","components/GuestList/index.js","App.js","reportWebVitals.js","index.js"],"names":["Spinner","className","AttendanceForm","props","state","attending","name","adults","children","submitting","handleChange","bind","handleSubmit","handleSpinner","e","input","value","currentTarget","this","setState","preventDefault","axios","post","then","Swal","fire","icon","title","text","catch","options","Button","onClick","scroll","scrollToBottom","duration","smooth","style","fontSize","Form","onSubmit","Field","marginBottom","color","onChange","type","required","disabled","placeholder","map","num","index","primary","Component","guestList","password","correctPassword","get","response","data","Container","fluid","Header","as","Table","celled","Row","HeaderCell","Body","family","negative","Cell","reduce","acc","parseFloat","App","exact","path","GuestList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22dcbfb6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"sk-fading-circle\">\r\n                <div className=\"sk-circle1 sk-circle\"></div>\r\n                <div className=\"sk-circle2 sk-circle\"></div>\r\n                <div className=\"sk-circle3 sk-circle\"></div>\r\n                <div className=\"sk-circle4 sk-circle\"></div>\r\n                <div className=\"sk-circle5 sk-circle\"></div>\r\n                <div className=\"sk-circle6 sk-circle\"></div>\r\n                <div className=\"sk-circle7 sk-circle\"></div>\r\n                <div className=\"sk-circle8 sk-circle\"></div>\r\n                <div className=\"sk-circle9 sk-circle\"></div>\r\n                <div className=\"sk-circle10 sk-circle\"></div>\r\n                <div className=\"sk-circle11 sk-circle\"></div>\r\n                <div className=\"sk-circle12 sk-circle\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport { animateScroll as scroll } from 'react-scroll'\r\nimport Spinner from \"./../Spinner\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\n\r\nclass AttendanceForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n      \r\n        this.state = {\r\n            attending: \"yes\",\r\n            name: \"\",\r\n            adults: \"0\",\r\n            children: \"0\",\r\n            submitting: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleSpinner = this.handleSpinner.bind(this);\r\n    }\r\n\r\n    handleChange(e, input) {\r\n        let value = e.currentTarget.value;\r\n        this.setState({ [input]: value }, () => {\r\n            if (this.state.attending === \"no\") {\r\n                this.setState({\r\n                    adults: \"0\",\r\n                    children: \"0\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSpinner() {\r\n        this.setState({ submitting: !this.state.submitting });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.handleSpinner();\r\n\r\n        axios.post('https://sheet.best/api/sheets/4bfb956b-6832-4e1f-8195-35afc8ffe96a', this.state)\r\n        .then(() => {\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'הטופס נשלח בהצלחה',\r\n                text: 'תודה שאשרתם הגעתכם, אתם יכולים לסגור את הדפדפן',\r\n            });\r\n\r\n            this.handleSpinner();\r\n            this.setState({\r\n                attending: \"yes\",\r\n                name: \"\",\r\n                adults: \"0\",\r\n                children: \"0\",\r\n            });\r\n\r\n        }).catch(() => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'אופס...',\r\n                text: 'נסו שוב',\r\n            });\r\n\r\n            this.handleSpinner();\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { attending, name, adults, children } = this.state;\r\n        const options = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <section>\r\n                    <ul className=\"slideshow\">\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                    <Button\r\n                        className=\"register-btn\"\r\n                        onClick={() => scroll.scrollToBottom({duration: 2500, smooth: 'easeInOutQuad'})}\r\n                        style={{fontSize: \"1.2rem\"}}\r\n                    >\r\n                        {\"לאישור הגעה\"}\r\n                    </Button>\r\n                </section>\r\n                <section>\r\n                    { this.state.submitting ? <Spinner /> :\r\n                    <Form className=\"form\" onSubmit={ this.handleSubmit }>\r\n                        <Form.Field style={{ marginBottom: \"2rem\" }}>\r\n                            <label style={{\r\n                                color: \"rgba(255, 255, 255, 0.85)\",\r\n                                fontSize: \"1.5rem\"\r\n                            }}>\r\n                                {\"שם מלא\"}\r\n                            </label>\r\n                            <input\r\n                                value={ name }\r\n                                onChange={ (e) => this.handleChange(e, \"name\") }\r\n                                type=\"text\"\r\n                                required\r\n                                \r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field style={{ marginBottom: \"2rem\" }}>\r\n                            <label style={{\r\n                                color: \"rgba(255, 255, 255, 0.85)\",\r\n                                fontSize: \"1.5rem\"\r\n                            }}>\r\n                                {\"באים לחתונה?\"}\r\n                            </label>\r\n                            <select\r\n                                required\r\n                                onChange={ (e) => this.handleChange(e, \"attending\")}\r\n                            >\r\n                                <option value=\"yes\">{\"כן\"}</option>\r\n                                <option value=\"no\">{\"לא\"}</option>\r\n                            </select>\r\n                        </Form.Field>\r\n\r\n                        <Form.Field style={{ marginBottom: \"2rem\" }}>\r\n                            <label style={{\r\n                                color: \"rgba(255, 255, 255, 0.85)\",\r\n                                fontSize: \"1.5rem\"\r\n                            }}>\r\n                                {\"מספר מבוגרים\"}\r\n                            </label>\r\n                            <select\r\n                                disabled={ attending === \"no\" }\r\n                                placeholder=\"Enter your age\"\r\n                                value={ adults }\r\n                                onChange={ (e) => this.handleChange(e, \"adults\") }\r\n                                required={ attending === \"yes\" }\r\n                            >\r\n                                { options.map((num, index) => (\r\n                                    <option\r\n                                        value={`${num}`}\r\n                                        key={index}\r\n                                    >\r\n                                        {`${num}`}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </Form.Field>\r\n\r\n                        <Form.Field style={{ marginBottom: \"2rem\" }}>\r\n                            <label style={{\r\n                                color: \"rgba(255, 255, 255, 0.85)\",\r\n                                fontSize: \"1.5rem\"\r\n                            }}>\r\n                                {\"מספר ילדים\"}</label>\r\n                            <select\r\n                                disabled={ attending === \"no\" }\r\n                                placeholder=\"Enter your age\"\r\n                                value={ children }\r\n                                onChange={ (e) => this.handleChange(e, \"children\") }\r\n                                required={ attending === \"yes\" }\r\n                            >\r\n                                { options.map((num, index) => (\r\n                                    <option\r\n                                        value={`${num}`}\r\n                                        key={index}\r\n                                    >\r\n                                        {`${num}`}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </Form.Field>\r\n\r\n                        <Button\r\n                            primary\r\n                            type=\"submit\"\r\n                            style={{fontSize: \"1.2rem\"}}\r\n                        >\r\n                            {\"שלח\"}\r\n                        </Button>\r\n                    </Form> }\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendanceForm;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Header, Table, Form, Button } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\n\r\nclass AttendanceForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n      \r\n        this.state = {\r\n            guestList: [],\r\n            password: \"\",\r\n            correctPassword: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://sheet.best/api/sheets/4bfb956b-6832-4e1f-8195-35afc8ffe96a')\r\n        .then((response) => {\r\n            this.setState({ guestList: response.data })\r\n        })\r\n    }\r\n\r\n    handleChange(e, input) {\r\n        let value = e.currentTarget.value;\r\n\r\n        this.setState({ [input]: value })\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (this.state.password === \"dcn0359\") {\r\n            this.setState({ correctPassword: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { guestList, password, correctPassword } = this.state;\r\n\r\n        return (\r\n            <Container fluid className=\"container\">\r\n                <Header as=\"h2\">{\"Wedding Guest List\"}</Header>\r\n                { correctPassword ?\r\n                    <>\r\n                        <Table celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>{\"Name\"}</Table.HeaderCell>\r\n                                    <Table.HeaderCell>{\"Attending\"}</Table.HeaderCell>\r\n                                    <Table.HeaderCell>{\"Adults\"}</Table.HeaderCell>\r\n                                    <Table.HeaderCell>{\"Children\"}</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                {guestList.map((family, index) =>\r\n                                    <Table.Row\r\n                                        negative={family.attending === \"no\"}\r\n                                        key={ index }\r\n                                    >\r\n                                        <Table.Cell>{ family.name }</Table.Cell>\r\n                                        <Table.Cell>{ family.attending }</Table.Cell>\r\n                                        <Table.Cell>{ family.adults }</Table.Cell>\r\n                                        <Table.Cell>{ family.children }</Table.Cell>\r\n                                    </Table.Row>\r\n                                )}\r\n                            </Table.Body>\r\n                        </Table>\r\n                        <Table celled>\r\n                            <Table.Header>\r\n                                <Table.Row>\r\n                                    <Table.HeaderCell>{\"Total Adults\"}</Table.HeaderCell>\r\n                                    <Table.HeaderCell>{\"Total Children\"}</Table.HeaderCell>\r\n                                </Table.Row>\r\n                            </Table.Header>\r\n\r\n                            <Table.Body>\r\n                                <Table.Row>\r\n                                    <Table.Cell>\r\n                                        { guestList.reduce((acc, family) => {\r\n                                            return acc + parseFloat(family.adults);\r\n                                        }, 0)}\r\n                                    </Table.Cell>\r\n                                    <Table.Cell>\r\n                                        { guestList.reduce((acc, family) => {\r\n                                            return acc + parseFloat(family.children);\r\n                                        }, 0)}\r\n                                    </Table.Cell>\r\n                                </Table.Row>\r\n                            </Table.Body>\r\n                        </Table> \r\n                    </> :\r\n                    <Form className=\"form\" onSubmit={ this.handleSubmit }>\r\n                        <Form.Field>\r\n                            <label>{\"Password\"}</label>\r\n                            <input\r\n                                placeholder=\"Enter password\"\r\n                                value={ password }\r\n                                onChange={ (e) => this.handleChange(e, \"password\") }\r\n                                type=\"password\"\r\n                            />\r\n                        </Form.Field>\r\n                        <Button primary type=\"submit\">{\"Submit\"}</Button>\r\n                    </Form>\r\n                }\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendanceForm;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"./assets/css/spinner.css\";\nimport AttendanceForm from \"./components/AttendanceForm\";\nimport GuestList from \"./components/GuestList\";\n  \n\nconst App = () => {\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <AttendanceForm />\n      </Route>\n      <Route exact path=\"/guest-list\">\n        <GuestList />\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}